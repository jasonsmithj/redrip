name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.24.2'
          cache: true

      - name: Parse tag name
        id: tag
        run: echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Get PR titles since last release
        id: get_changes
        run: |
          last_tag=$(git describe --tags --abbrev=0 ${{ steps.tag.outputs.tag }}^ 2>/dev/null || echo "")
          if [ -z "$last_tag" ]; then
            echo "Getting all PR titles as this is the first release"
            changes=$(git log --merges --grep="Merge pull request" --pretty=format:"* %s" | sed 's/Merge pull request \(#[0-9]*\).*: \(.*\)/\1: \2/')
          else
            echo "Getting PR titles since $last_tag"
            changes=$(git log $last_tag..${{ steps.tag.outputs.tag }} --merges --grep="Merge pull request" --pretty=format:"* %s" | sed 's/Merge pull request \(#[0-9]*\).*: \(.*\)/\1: \2/')
          fi
          
          if [ -z "$changes" ]; then
            changes="* No notable changes"
          fi
          
          # Convert the changes to a format suitable for the GitHub release notes
          changes="${changes//'%'/'%25'}"
          changes="${changes//$'\n'/'%0A'}"
          changes="${changes//$'\r'/'%0D'}"
          
          echo "changes=$changes" >> $GITHUB_OUTPUT

      - name: Build for Linux (amd64)
        run: |
          GOOS=linux GOARCH=amd64 go build -o redrip-linux-amd64 ./cmd
          tar -czvf redrip-linux-amd64.tar.gz redrip-linux-amd64

      - name: Build for Linux (arm64)
        run: |
          GOOS=linux GOARCH=arm64 go build -o redrip-linux-arm64 ./cmd
          tar -czvf redrip-linux-arm64.tar.gz redrip-linux-arm64

      - name: Build for macOS (amd64)
        run: |
          GOOS=darwin GOARCH=amd64 go build -o redrip-darwin-amd64 ./cmd
          tar -czvf redrip-darwin-amd64.tar.gz redrip-darwin-amd64

      - name: Build for macOS (arm64)
        run: |
          GOOS=darwin GOARCH=arm64 go build -o redrip-darwin-arm64 ./cmd
          tar -czvf redrip-darwin-arm64.tar.gz redrip-darwin-arm64

      - name: Build for Windows (amd64)
        run: |
          GOOS=windows GOARCH=amd64 go build -o redrip-windows-amd64.exe ./cmd
          zip redrip-windows-amd64.zip redrip-windows-amd64.exe

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.tag.outputs.tag }}
          name: Release ${{ steps.tag.outputs.tag }}
          body: |
            ## Changes
            ${{ steps.get_changes.outputs.changes }}
            
            ## Downloads
            - [Linux (amd64)](https://github.com/${{ github.repository }}/releases/download/${{ steps.tag.outputs.tag }}/redrip-linux-amd64.tar.gz)
            - [Linux (arm64)](https://github.com/${{ github.repository }}/releases/download/${{ steps.tag.outputs.tag }}/redrip-linux-arm64.tar.gz)
            - [macOS (amd64)](https://github.com/${{ github.repository }}/releases/download/${{ steps.tag.outputs.tag }}/redrip-darwin-amd64.tar.gz)
            - [macOS (arm64)](https://github.com/${{ github.repository }}/releases/download/${{ steps.tag.outputs.tag }}/redrip-darwin-arm64.tar.gz)
            - [Windows (amd64)](https://github.com/${{ github.repository }}/releases/download/${{ steps.tag.outputs.tag }}/redrip-windows-amd64.zip)
          files: |
            redrip-linux-amd64.tar.gz
            redrip-linux-arm64.tar.gz
            redrip-darwin-amd64.tar.gz
            redrip-darwin-arm64.tar.gz
            redrip-windows-amd64.zip
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 